language: android
dist: trusty

env:
  global:
    - ANDROID_TARGET=android-29
    - EMULATOR_VERSION=21
    - ANDROID_ABI=google_apis/armeabi-v7a

android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    - tools
    - platform-tools

    # The BuildTools version used by your project
    - build-tools-29.0.2
    
    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    
    # The SDK version used to compile your project
    - $ANDROID_TARGET

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests.
    # The line should look like this after interpolation:
    # - sys-img-armeabi-v7a-android-22
    #- sys-img-${ANDROID_ABI}-${ANDROID_TARGET}
    - addon-google_apis-google-$EMULATOR_VERSION
    - sys-img-${ANDROID_ABI}-addon-google_apis-google-&EMULATOR_VERSION

licenses:
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'

before_install:
  # Accept sdk licenses
  - yes | sdkmanager "platforms;android-29"

  # Get gradle
  - chmod +x gradlew
  - wget https://services.gradle.org/distributions/gradle-6.3-bin.zip
  - unzip -qq gradle-6.3-bin.zip
  - export GRADLE_HOME=$PWD/gradle-6.3
  - export PATH=$GRADLE_HOME/bin:$PATH
  - gradle -v
  
  # Start the emulator
  #- echo no | android create avd --force -n test -t $ANDROID_TARGET --abi $ANDROID_ABI -c 100M
  #- emulator -avd test -no-audio -no-window &
  #- android-wait-for-emulator
  #- adb shell input keyevent 82 &

  - echo no | android create avd --force -n wvga800-emulator -t "Google Inc.:Google APIs:"$EMULATOR_VERSION --abi $ANDROID_ABI -s WVGA800 -c 128M

  # Start the emulator (with no GUI: note the "-no-window")
  - emulator -avd wvga800-emulator -no-window &
  
  # The app will now automatically be installed and tested via
  # the command `gradle connectedCheck`
script:
  - ./gradlew build connectedCheck
